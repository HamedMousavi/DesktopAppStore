//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAdministration.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=(local)\\SQLExpress;Initial Catalog=PersianSoftware;Persist Security I" +
            "nfo=True;User ID=PersianSoftwareWebSite;Password=1aXz%VwO*cG~H_P^n")]
        public string PersianSoftwareConnectionString {
            get {
                return ((string)(this["PersianSoftwareConnectionString"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("D:\\Job\\SourceCodes\\Hamed\\Website\\Temp\\Images\\")]
        public string ProductResDirBase {
            get {
                return ((string)(this["ProductResDirBase"]));
            }
            set {
                this["ProductResDirBase"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("800, 600")]
        public global::System.Drawing.Size MaxScreenshotSize {
            get {
                return ((global::System.Drawing.Size)(this["MaxScreenshotSize"]));
            }
            set {
                this["MaxScreenshotSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("120, 80")]
        public global::System.Drawing.Size MaxThumbnailSize {
            get {
                return ((global::System.Drawing.Size)(this["MaxThumbnailSize"]));
            }
            set {
                this["MaxThumbnailSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\\Screenshots\\")]
        public string ScreenshotDirName {
            get {
                return ((string)(this["ScreenshotDirName"]));
            }
            set {
                this["ScreenshotDirName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Thumbnails\\")]
        public string ThumbnailDirName {
            get {
                return ((string)(this["ThumbnailDirName"]));
            }
            set {
                this["ThumbnailDirName"] = value;
            }
        }
    }
}
